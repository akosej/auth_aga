on:
  push:
    # Sequence of patterns matched against refs/tags
    branches: [ "main" ]

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker
        run: |
          docker run --rm -v $(pwd):/go/src/app -w /go/src/app golang:1.20-buster /bin/bash -c "
            apt-get update && apt-get install -y build-essential gcc libc6-dev
            go build -trimpath -o aga_auth main.go
          "

      - name: Create Tag
        id: create_tag
        run: |
          TAG_NAME=$(date +'%Y%m%d%H%M%S')
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV 

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Compiler ${{ env.TAG_NAME }}
          body: |
            ## Changes
            - Initial release of AGA Auth
          draft: false
          prerelease: true
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./aga_auth
          asset_name: aga_auth
          asset_content_type: application/octet-stream
